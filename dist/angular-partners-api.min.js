/**
 * angular-partners-api - Angular module for call Creads partners API
 * @version v0.0.0
 * @link http://gitlab.creads.org/creads/angular-partners-api
 * @license proprietary
 */
!function(){"use strict";angular.module("partners.api",["partners.api.config","partners.api.factory","partners.api.interceptor"])}(),function(){"use strict";angular.module("partners.api.config",[]).config(["$httpProvider",function(t){t.interceptors.push("apiInterceptor")}])}(),function(){"use strict";function t(){function t(t){if("string"!=typeof t)throw new Error("String value is provide for parameter endpoint");return c=t,this}function e(){return c}function n(t){if("string"!=typeof t)throw new Error("String value is provide for parameter version");return s=t,this}function o(){return s}function r(t,n){function r(e){var o=n.defer();return t({method:e.method,url:c+"/"+s+e.url,data:e.data,params:e.params,headers:e.headers}).success(function(t){o.resolve(t)}).error(function(t){o.reject(t)}),o.promise}return i.call=r,i.getEndpoint=e,i.getVersion=o,i}var i={},c="http://api.creads-partners.com",s="0.0.0";this.setEndpoint=t,this.getEndpoint=e,this.setVersion=n,this.getVersion=o,this.$get=r,r.$inject=["$http","$q"]}angular.module("partners.api.factory",[]).provider("api",[t])}(),describe("[] API",function(){describe("[Unit]: Testing api config provider",function(){var t;beforeEach(function(){angular.module("fakeModule",[]).config(["$injector",function(e){t=e.get("apiProvider")}]),module("partners.api","fakeModule"),inject(function(){})}),describe("getEndpoint method",function(){it("should be a function",function(){expect(t.getEndpoint).to.be.a("function")}),it("should return http://api.creads-partners.com",function(){expect(t.getEndpoint()).to.be.equal("http://api.creads-partners.com")})}),describe("setEndpoint method",function(){it("should be a function",function(){expect(t.setEndpoint).to.be.a("function")}),it("should throw an error if value is not string",function(){expect(function(){t.setEndpoint()}).to["throw"](Error),expect(function(){t.setEndpoint(null)}).to["throw"](Error),expect(function(){t.setEndpoint(void 0)}).to["throw"](Error),expect(function(){t.setEndpoint({})}).to["throw"](Error),expect(function(){t.setEndpoint([])}).to["throw"](Error),expect(function(){t.setEndpoint(102)}).to["throw"](Error),expect(function(){t.setEndpoint(!0)}).to["throw"](Error),expect(function(){t.setEndpoint(function(){})}).to["throw"](Error)}),it("should set endpoint with https://api.github.com",function(){t.setEndpoint("https://api.github.com"),expect(t.getEndpoint()).to.be.equal("https://api.github.com")}),it("should return an instance of apiProvider",function(){expect(t.setEndpoint("endpoint")).to.be.an["instanceof"](t.constructor)})}),describe("getVersion method",function(){it("should be a function",function(){expect(t.getVersion).to.be.a("function")}),it("should return 0.0.0",function(){expect(t.getVersion()).to.be.equal("0.0.0")})}),describe("setVersion method",function(){it("should be a function",function(){expect(t.setVersion).to.be.a("function")}),it("should throw an error if value is not string",function(){expect(function(){t.setVersion()}).to["throw"](Error),expect(function(){t.setVersion(null)}).to["throw"](Error),expect(function(){t.setVersion(void 0)}).to["throw"](Error),expect(function(){t.setVersion({})}).to["throw"](Error),expect(function(){t.setVersion([])}).to["throw"](Error),expect(function(){t.setVersion(102)}).to["throw"](Error),expect(function(){t.setVersion(!0)}).to["throw"](Error),expect(function(){t.setVersion(function(){})}).to["throw"](Error)}),it("should set version with 1.0.0",function(){t.setVersion("1.0.0"),expect(t.getVersion()).to.be.equal("1.0.0")}),it("should return an instance of apiProvider",function(){expect(t.setVersion("endpoint")).to.be.an["instanceof"](t.constructor)})})}),describe("[Unit]: Testing api factory",function(){var t,e;beforeEach(module("partners.api")),beforeEach(inject(function(n){t=n.get("api"),e=n.get("$httpBackend")})),describe("call method",function(){it("should be a function",function(){expect(t.call).to.be.a("function")}),it("should call / with GET method",function(){e.expectGET("http://api.creads-partners.com/0.0.0/").respond(200),t.call({method:"GET",url:"/"}),e.flush()}),it("should call /projects with query params and GET method",function(){e.expectGET("http://api.creads-partners.com/0.0.0/projects?query=1").respond(200),t.call({method:"GET",url:"/projects",params:{query:1}}),e.flush()}),it("should call /projects with data and POST method",function(){var n={title:"XXX",category:"ZZZ"};e.expectPOST("http://api.creads-partners.com/0.0.0/projects",n).respond(200),t.call({method:"POST",url:"/projects",data:n}),e.flush()}),it("should call / with GET method and specific headers",function(){e.expectGET("http://api.creads-partners.com/0.0.0/",{Authorization:"Bearer TOKEN",Accept:"application/json, text/plain, */*"}).respond(),t.call({method:"GET",url:"/",headers:{Authorization:"Bearer TOKEN"}}),e.flush()})})})}),function(){"use strict";function t(t){function e(t){return t&&"[object Function]"==={}.toString.call(t)}function n(e){return q||new RegExp("^"+t.getEndpoint()).test(e)?!0:!1}function o(){return q}function r(t){if("boolean"!=typeof t)throw new Error("Boolean value is provide for option isAbleToCatchAllRequest");return q=t,this}function i(){return d}function c(t){if(!e(t))throw new Error("Function is provide for option onRequest");return d=t,this}function s(){return E}function u(t){if(!e(t))throw new Error("Function is provide for option onRequestError");return E=t,this}function p(){return b}function f(t){if(!e(t))throw new Error("Function is provide for option onResponse");return b=t,this}function a(){return R}function h(t){if(!e(t))throw new Error("Function is provide for option onResponseError");return R=t,this}function l(t,e){function r(t){return n(t.url)&&void 0!==d&&(t=d(e,t)),t}function i(o){return n(o.url)&&void 0!==E?E(e,o):t.reject(o)}function c(t){return n(t.config.url)&&void 0!==b&&(t=b(e,t)),t}function s(o){return n(o.config.url)&&void 0!==R?R(e,o):t.reject(o)}return x.request=r,x.requestError=i,x.response=c,x.responseError=s,x.isAbleToCatchAllRequest=o,x}var d,E,b,R,x={},q=!1;this.isAbleToCatchAllRequest=o,this.setIsAbleToCatchAllRequest=r,this.getOnRequest=i,this.setOnRequest=c,this.getOnRequestError=s,this.setOnRequestError=u,this.getOnResponse=p,this.setOnResponse=f,this.getOnResponseError=a,this.setOnResponseError=h,this.$get=l,l.$inject=["$q","$injector"]}angular.module("partners.api.interceptor",[]).provider("apiInterceptor",["apiProvider",t])}(),describe("[] API INTERCEPTOR",function(){describe("[Unit]: Testing apiInterceptor config provider",function(){var t;beforeEach(function(){angular.module("fakeModule",[]).config(["$injector",function(e){t=e.get("apiInterceptorProvider")}]),module("partners.api","fakeModule"),inject(function(){})}),describe("isAbleToCatchAllRequest method",function(){it("should be a function",function(){expect(t.setIsAbleToCatchAllRequest).to.be.a("function")}),it("should return false",function(){expect(t.isAbleToCatchAllRequest()).to.be["false"]})}),describe("setIsAbleToCatchAllRequest method",function(){it("should be a function",function(){expect(t.setIsAbleToCatchAllRequest).to.be.a("function")}),it("should throw an error if value is not boolean",function(){expect(function(){t.setIsAbleToCatchAllRequest()}).to["throw"](Error),expect(function(){t.setIsAbleToCatchAllRequest(null)}).to["throw"](Error),expect(function(){t.setIsAbleToCatchAllRequest(void 0)}).to["throw"](Error),expect(function(){t.setIsAbleToCatchAllRequest({})}).to["throw"](Error),expect(function(){t.setIsAbleToCatchAllRequest([])}).to["throw"](Error),expect(function(){t.setIsAbleToCatchAllRequest(102)}).to["throw"](Error),expect(function(){t.setIsAbleToCatchAllRequest("true")}).to["throw"](Error),expect(function(){t.setIsAbleToCatchAllRequest(function(){})}).to["throw"](Error)}),it("should set _isAbleToCatchAllRequest to true",function(){t.setIsAbleToCatchAllRequest(!0),expect(t.isAbleToCatchAllRequest()).to.be["true"]}),it("should return an instance of apiInterceptorProvider",function(){expect(t.setIsAbleToCatchAllRequest(!1)).to.be.an["instanceof"](t.constructor)})}),describe("getOnRequest method",function(){it("should be a function",function(){expect(t.getOnRequest).to.be.a("function")}),it("should return undefined",function(){expect(t.getOnRequest()).to.be.undefined})}),describe("setOnRequest method",function(){it("should be a function",function(){expect(t.setOnRequest).to.be.a("function")}),it("should throw an error if value is not function",function(){expect(function(){t.setOnRequest()}).to["throw"](Error),expect(function(){t.setOnRequest(null)}).to["throw"](Error),expect(function(){t.setOnRequest(void 0)}).to["throw"](Error),expect(function(){t.setOnRequest({})}).to["throw"](Error),expect(function(){t.setOnRequest([])}).to["throw"](Error),expect(function(){t.setOnRequest(102)}).to["throw"](Error),expect(function(){t.setOnRequest("true")}).to["throw"](Error),expect(function(){t.setOnRequest(!0)}).to["throw"](Error)}),it("should set onRequest to function",function(){t.setOnRequest(function(){}),expect(t.getOnRequest()).to.be.a("function")}),it("should return an instance of apiInterceptorProvider",function(){expect(t.setOnRequest(function(){})).to.be.an["instanceof"](t.constructor)})}),describe("getOnRequestError method",function(){it("should be a function",function(){expect(t.getOnRequestError).to.be.a("function")}),it("should return undefined",function(){expect(t.getOnRequestError()).to.be.undefined})}),describe("setOnRequestError method",function(){it("should be a function",function(){expect(t.setOnRequestError).to.be.a("function")}),it("should throw an error if value is not function",function(){expect(function(){t.setOnRequestError()}).to["throw"](Error),expect(function(){t.setOnRequestError(null)}).to["throw"](Error),expect(function(){t.setOnRequestError(void 0)}).to["throw"](Error),expect(function(){t.setOnRequestError({})}).to["throw"](Error),expect(function(){t.setOnRequestError([])}).to["throw"](Error),expect(function(){t.setOnRequestError(102)}).to["throw"](Error),expect(function(){t.setOnRequestError("true")}).to["throw"](Error),expect(function(){t.setOnRequestError(!0)}).to["throw"](Error)}),it("should set onRequestError to function",function(){t.setOnRequestError(function(){}),expect(t.getOnRequestError()).to.be.a("function")}),it("should return an instance of apiInterceptorProvider",function(){expect(t.setOnRequestError(function(){})).to.be.an["instanceof"](t.constructor)})}),describe("getOnResponse method",function(){it("should be a function",function(){expect(t.getOnResponse).to.be.a("function")}),it("should return undefined",function(){expect(t.getOnResponse()).to.be.undefined})}),describe("setOnResponse method",function(){it("should be a function",function(){expect(t.setOnResponse).to.be.a("function")}),it("should throw an error if value is not function",function(){expect(function(){t.setOnResponse()}).to["throw"](Error),expect(function(){t.setOnResponse(null)}).to["throw"](Error),expect(function(){t.setOnResponse(void 0)}).to["throw"](Error),expect(function(){t.setOnResponse({})}).to["throw"](Error),expect(function(){t.setOnResponse([])}).to["throw"](Error),expect(function(){t.setOnResponse(102)}).to["throw"](Error),expect(function(){t.setOnResponse("true")}).to["throw"](Error),expect(function(){t.setOnResponse(!0)}).to["throw"](Error)}),it("should set onRequestError to function",function(){t.setOnResponse(function(){}),expect(t.getOnResponse()).to.be.a("function")}),it("should return an instance of apiInterceptorProvider",function(){expect(t.setOnResponse(function(){})).to.be.an["instanceof"](t.constructor)})}),describe("getOnResponseError method",function(){it("should be a function",function(){expect(t.getOnResponseError).to.be.a("function")}),it("should return undefined",function(){expect(t.getOnResponseError()).to.be.undefined})}),describe("setOnResponseError method",function(){it("should be a function",function(){expect(t.setOnResponseError).to.be.a("function")}),it("should throw an error if value is not function",function(){expect(function(){t.setOnResponseError()}).to["throw"](Error),expect(function(){t.setOnResponseError(null)}).to["throw"](Error),expect(function(){t.setOnResponseError(void 0)}).to["throw"](Error),expect(function(){t.setOnResponseError({})}).to["throw"](Error),expect(function(){t.setOnResponseError([])}).to["throw"](Error),expect(function(){t.setOnResponseError(102)}).to["throw"](Error),expect(function(){t.setOnResponseError("true")}).to["throw"](Error),expect(function(){t.setOnResponseError(!0)}).to["throw"](Error)}),it("should set onRequestError to function",function(){t.setOnResponseError(function(){}),expect(t.getOnResponseError()).to.be.a("function")}),it("should return an instance of apiInterceptorProvider",function(){expect(t.setOnResponseError(function(){})).to.be.an["instanceof"](t.constructor)})})}),describe("[Unit]: Testing apiInterceptor factory",function(){var t,e,n,o,r,i;beforeEach(function(){module("partners.api",function(n){t=n.get("apiInterceptorProvider"),e=n.get("$httpProvider")}),inject(function(t){n=t.get("$httpBackend"),o=t.get("$http"),r=t.get("apiInterceptor"),i=t.get("api")})}),beforeEach(function(){t.setOnRequest(function(t,e){return e.headers.isCatch=!0,e})}),it("should be register as interceptor",function(){expect(e.interceptors).to.contain("apiInterceptor")}),it("should not catch all request",function(){n.expectGET("/mock",{Accept:"application/json, text/plain, */*"}).respond(),o.get("/mock"),n.flush()}),describe("request",function(){beforeEach(function(){t.setIsAbleToCatchAllRequest(!0).setOnRequest(function(t,e){return e.headers.isCatch=!0,e})}),it("should be intercepted",function(){n.expectGET("/mock",{isCatch:!0,Accept:"application/json, text/plain, */*"}).respond(200),o.get("/mock"),n.flush()})}),describe("response",function(){beforeEach(function(){t.setIsAbleToCatchAllRequest(!0).setOnResponse(function(t,e){return e.data="isIntercepted",e})}),it("should be intercepted",function(){n.expectGET("/mock").respond(200),o.get("/mock").then(function(t){expect(t.data).to.be.equal("isIntercepted")}),n.flush()})}),describe("response error",function(){beforeEach(function(){t.setIsAbleToCatchAllRequest(!0).setOnResponseError(function(t,e){return e.data="isInterceptedError",t.get("$q").reject(e)})}),it("should be intercepted",function(){n.expectGET("/mock").respond(400),o.get("/mock").then(null,function(t){expect(t.data).to.be.equal("isInterceptedError")}),n.flush()})})})});